language: python

cache: pip

dist: xenial

os:
  - linux

python:
  - &mainstream_python 3.7
  - 3.7-dev

env:
  global:
    - POETRY_VERSION=0.12.17

install:
  - &install_poetry pip install "poetry==$POETRY_VERSION" && poetry --version && poetry config settings.virtualenvs.create false
  - &install_test_deps poetry install --no-interaction --no-ansi -vvv --no-dev -E test
  - pip install codecov

before_script: skip

script:
  - make _cov

after_success:
  - codecov

_helpers:
  - &_mainstream_python_base
    python: *mainstream_python
  - &_reset_steps
    env: []
    before_install: skip
    install: skip
    before_script: skip
    script: skip
    after_success: []
    before_deploy: skip
  - &_deploy_base
    stage: &deploy_stage_name Deploy
    <<: *_mainstream_python_base
    <<: *_reset_steps

jobs:
  include:
    - stage: &pre_test_stage_name Linting and pre-test checks
      <<: *_mainstream_python_base
      <<: *_reset_steps
      name: Check source code with pre-commit
      install:
        - *install_poetry
        - &install_linting_deps poetry install --no-interaction --no-ansi -vvv -E linting
      script:
        - make check-all
    - <<: *_deploy_base
      name: PyPI deployment
      if: ((tag =~ ^v) AND (branch = master)) OR ((tag =~ ^v) AND (tag = branch)) OR (env(DEPLOY_PYPI_DEBUG) = true)
      install:
        - *install_poetry
      before_deploy:
        - poetry config http-basic.pypi $PYPI_USERNAME $PYPI_PASSWORD
        - poetry build
      deploy:
        provider: script
        script: poetry publish
        skip_cleanup: true
        on:
          all_branches: true
    - <<: *_deploy_base
      name: Github Release deployment
      if: ((tag =~ ^v) AND (branch = master)) OR ((tag =~ ^v) AND (tag = branch)) OR (env(DEPLOY_GH_RELEASE_DEBUG) = true)
      install:
        - *install_poetry
      script:
        - poetry build
      deploy:
        provider: releases
        api_key:
          secure: MukueyqjKPF2XytNn1CyjZLHniNNo4/4hWgcoVQY02WnJa4uhrohJYsjI2ghQNC6yns40VqMrp6k8oWaNOkWxWcr7BV4AiX1RTO9Gpe4QoztFhdqecgxjEwYA+yAZT/TVy4Zuz+wI/rwOQcMtoAwnaU0ll2/+FJ6RHAV2pgHjV3gfUtjs6u9MQnx64p3XmUANjqDFGj0uGwK+nUc0Fbrd1uhaFit32cpjXtiBWm5cjgaKuT/pcLyd+Ike9f8ahwpYemir+E6YojjTRz+MxxZGIUXn+qj909Pj3T7ejTOaMnd9cDv7I4HhUcxxHDxvD0mv+2RvUR44HCBPLlGv7JA/9fQFrnC1Acan9UIvH6Vakz4J+onfivwcF0k1gpUXccP+Yh4xuAKtDre5xDkdZtvuU9UGzsvDQG09QWlo8bYkN4XdUcC4IFkyg9NtSfafsx8ERAnzQoKi3/k8N0ZRHc838DJWAYw2cQ3+PYPEfogs9a/7eiX9B5FsudtspGHU6Kp/5V1nanAWWzi6FZlpjEplBqcWjtOvxnv2VhqlXAiKmP+8XTYbIDNeXg5yvX9bKO1KSjXT/RUEedzXu1hMZUzd0/VjAsrmT8J5Mp3/BjEV9XioYLZt0UKYNl3SczioXKehhp6DvQ56MtWyBfwxOhXJIfUvDuaQCxXw8nuLm74uuE=
        file_glob: true
        file: dist/*
        skip_cleanup: true
        on:
          all_branches: true

stages:
  - *pre_test_stage_name
  - test
  - name: *deploy_stage_name
    if: ((tag =~ ^v) AND (tag = branch)) OR (env(DEPLOY_DEBUG) = true)
